[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 target = vec2(0.5);
uniform vec2 offset = vec2(-0.01, -0.05);
uniform float circle_size: hint_range(0f, 1f);

void fragment() {

	// keep current texture
	COLOR = texture(TEXTURE, UV);
	
	// Convert to match aspect ratio
	vec2 resolution = 1f / SCREEN_PIXEL_SIZE;
	vec2 current_pixel = SCREEN_UV * resolution;
	vec2 offset_target = target + offset;
	vec2 target_pixel = vec2(offset_target.x, 1f - offset_target.y) * resolution;
	float dist = distance(current_pixel, target_pixel);
	float radius = circle_size * length(resolution);
	
	COLOR.a = clamp(1f + dist - radius, 0f, 1f);
}"

[resource]
shader = SubResource( 1 )
shader_param/target = Vector2( 0.5, 0.5 )
shader_param/offset = Vector2( 0, -0.05 )
shader_param/circle_size = 0.0
