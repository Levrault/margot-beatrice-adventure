[gd_scene load_steps=9 format=2]

[ext_resource path="res://src/Camera/CameraAnchor.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/tilesets/tileset_land_background.tres" type="TileSet" id=2]
[ext_resource path="res://src/Scenes/Scene.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/tilesets/tileset_land_middle.tres" type="TileSet" id=4]
[ext_resource path="res://src/Objects/Interactables/Switch.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/Objects/Interactables/TileMapForSwitch.tscn" type="PackedScene" id=6]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/teleport-effect

This shader is under CC0 lincense. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float progress : hint_range(0.0, 1.0);
uniform float noise_desnity = 60;
uniform float beam_size : hint_range(0.01, 0.15);
uniform vec4 color : hint_color = vec4(0.0, 1.02, 1.2, 1.0);

// We are generating our own noise here. You could experiment with the 
// built in SimplexNoise or your own noise texture for other effects.
vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

void fragment()
{
	vec4 tex = texture(TEXTURE, UV);
	
	float noise = noise(UV * noise_desnity) * UV.y;
	
	float d1 = step(progress, noise);
	float d2 = step(progress - beam_size, noise);
	
	vec3 beam = vec3(d2 - d1) * color.rgb;
	
	tex.rgb += beam;
	tex.a *= d2;
	
	COLOR = tex;
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/progress = 0.0
shader_param/noise_desnity = 60.0
shader_param/beam_size = null
shader_param/color = Color( 1, 1, 1, 1 )

[node name="Debug1" instance=ExtResource( 3 )]
full_screen_shader = false
next_level = "level3"

[node name="BackgroundTilemap" parent="." index="6"]
tile_set = ExtResource( 2 )

[node name="MiddleGroundTileMap" parent="." index="7"]
tile_set = ExtResource( 4 )
tile_data = PoolIntArray( 1048576, 0, 0, 1048577, 0, 1, 1048578, 0, 1, 1048579, 0, 1, 1048580, 0, 1, 1048581, 0, 1, 1048582, 0, 1, 1048583, 0, 1, 1048584, 0, 1, 1048585, 0, 1, 1048586, 0, 1, 1048587, 0, 1, 1048588, 0, 1, 1048589, 0, 1, 1048590, 0, 1, 1048591, 0, 1, 1048592, 0, 1, 1048593, 0, 1, 1048594, 0, 1, 1048595, 0, 1, 1048596, 0, 1, 1048597, 0, 1, 1048598, 0, 1, 1048599, 0, 1, 1048600, 0, 1, 1048601, 0, 1, 1048602, 0, 1, 1048603, 0, 1, 1048604, 0, 1, 1048605, 0, 2, 1048606, 1, 0, 1048607, 1, 1, 1048608, 1, 1, 1048609, 1, 1, 1048610, 1, 1, 1048611, 1, 1, 1048612, 1, 1, 1048613, 1, 1, 1048614, 1, 1, 1048615, 1, 1, 1048616, 1, 1, 1048617, 1, 1, 1048618, 1, 1, 1048619, 1, 1, 1048620, 1, 1, 1048621, 1, 1, 1048622, 1, 1, 1048623, 1, 1, 1048624, 1, 1, 1048625, 1, 1, 1048626, 1, 1, 1048627, 1, 2, 1114112, 0, 131072, 1114113, 0, 131073, 1114114, 0, 131073, 1114115, 0, 131073, 1114116, 0, 131073, 1114117, 0, 131073, 1114118, 0, 131073, 1114119, 0, 131073, 1114120, 0, 131073, 1114121, 0, 131073, 1114122, 0, 131073, 1114123, 0, 131073, 1114124, 0, 131073, 1114125, 0, 131073, 1114126, 0, 131073, 1114127, 0, 131073, 1114128, 0, 131073, 1114129, 0, 131073, 1114130, 0, 131073, 1114131, 0, 131073, 1114132, 0, 131073, 1114133, 0, 131073, 1114134, 0, 131073, 1114135, 0, 131073, 1114136, 0, 131073, 1114137, 0, 131073, 1114138, 0, 131073, 1114139, 0, 131073, 1114140, 0, 131073, 1114141, 0, 131074, 1114142, 1, 131072, 1114143, 1, 131073, 1114144, 1, 131073, 1114145, 1, 131073, 1114146, 1, 131073, 1114147, 1, 131073, 1114148, 1, 131073, 1114149, 1, 131073, 1114150, 1, 131073, 1114151, 1, 131073, 1114152, 1, 131073, 1114153, 1, 131073, 1114154, 1, 131073, 1114155, 1, 131073, 1114156, 1, 131073, 1114157, 1, 131073, 1114158, 1, 131073, 1114159, 1, 131073, 1114160, 1, 131073, 1114161, 1, 131073, 1114162, 1, 131073, 1114163, 1, 131074 )

[node name="Player" parent="MiddleGroundTileMap" index="0"]
position = Vector2( 18, 255 )

[node name="Switch" parent="MiddleGroundTileMap/Interactables" index="0" instance=ExtResource( 5 )]
position = Vector2( 250, 248 )
object_path = NodePath("../TilmapForSwitch")

[node name="TilmapForSwitch" parent="MiddleGroundTileMap/Interactables" index="1" instance=ExtResource( 6 )]
material = SubResource( 2 )
tile_data = PoolIntArray( 327697, 47, 0, 327698, 47, 1, 327699, 47, 1, 327700, 47, 1, 327701, 47, 1, 327702, 47, 1, 327703, 47, 1, 327704, 47, 1, 327705, 47, 2, 393231, 47, 196608, 393232, 47, 196609, 393233, 47, 262150, 393234, 47, 65537, 393235, 47, 65537, 393236, 47, 65537, 393237, 47, 65537, 393238, 47, 65537, 393239, 47, 65537, 393240, 47, 65537, 393241, 47, 65538, 458769, 47, 131072, 458770, 47, 131073, 458771, 47, 131073, 458772, 47, 131073, 458773, 47, 131073, 458774, 47, 131073, 458775, 47, 131073, 458776, 47, 131073, 458777, 47, 196613, 458778, 47, 196610 )

[node name="EndOfLevel" parent="MiddleGroundTileMap" index="10"]
position = Vector2( 825, 257 )

[node name="CameraAnchor" parent="Anchors" index="1" instance=ExtResource( 1 )]
position = Vector2( 720, 135 )

[editable path="MiddleGroundTileMap/EndOfLevel"]
